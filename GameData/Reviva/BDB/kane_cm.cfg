// BDB Kane Command Module
// - BDB Placeholder
// - BDB 
// - BDB RPM
// - MASRetro (MAS, from MOARdVPlus)
// - MASGlass (MAS, from MOARdVPlus)
//
// These are also included because it's almost the same as the mk1-3 CM.
//
// - Stock (mk1-3)
// - RPM (mk1-3)
// - DE_IVAExtension (mk1-3)
// - ASET (mk1-3)
// - MAS (mk1-3)
// - DE+MAS (mk1-3)

@PART[bluedog_Apollo_CrewPod]:NEEDS[Bluedog_DB&B9PartSwitch&RasterPropMonitor]:BEFORE[zzz_Reviva]
{
	// Remove all RasterPropMonitor and add just one empty one
	// Each sub-type will fill in contents as required
	-MODULE[RasterPropMonitorComputer],* {}
	MODULE
	{
		name = RasterPropMonitorComputer
	}
}

@PART[bluedog_Apollo_CrewPod]:HAS[!MODULE[MASFlightComputer]]:NEEDS[Bluedog_DB&AvionicsSystems]:FOR[zzz_Reviva]
{
    MODULE
    {
        name = MASFlightComputer
        requiresPower = true
        gLimit = 4.7
        baseDisruptionChance = 0.20
    }
}

REVIVA_VARS_APOLLO
{
	MASFlightComputer
	{
		name = MASFlightComputer
		requiresPower = true
		gLimit = 4.7
		baseDisruptionChance = 0.20
		rate = 0.025

		RPM_COLOROVERRIDE
		{
			COLORDEFINITION
			{
				// 'white' label unlit color
				name = ASET_SWITCHER_NAME_ZEROCOLOR
				color =  213, 213, 213, 255
			}
			COLORDEFINITION
			{
				name = ASET_NUMINPUT_DISPLAY_GHOSTCOLOR
				color = 0, 255, 0, 31
			}
			COLORDEFINITION
			{
				name = ASET_NUMINPUT_DISPLAY_POSITIVECOLOR
				color = 0, 255, 0, 255
			}
			COLORDEFINITION
			{
				name = ASET_NUMINPUT_DISPLAY_NEGATIVECOLOR
				color = 0, 0, 0, 0
			}
		}

		MAS_ACTION_GROUP
		{
			name = Kane-11-LIB EVA Floodlight AG
			id = 10
			ACTION
			{
				name = Light
				part = bluedog_Apollo_EVAFloodlight
				module = ModuleAnimateGeneric
				action = toggle
			}
		}
		MAS_ACTION_GROUP
		{
			name = Kane-11-DPM6 0.625m Active Docking Mechanism AG
			id = 11
			ACTION
			{
				name = Docking Probe
				part = bluedog_Apollo_ProbeDockingPort
				module = ModuleAnimateGeneric
				action = toggle
			}
		}
		MAS_ACTION_GROUP
		{
			name = Kane-11-FBL Docking Floodlight AG
			id = 12
			ACTION
			{
				name = Light
				part = bluedog_Apollo_DockingSpotlight
				module = ModuleAnimateGeneric
				action = toggle
			}
		}
		MAS_ACTION_GROUP
		{
			name = MdV_FASAApollo_CM RCS AG
			id = 13
			ACTION
			{
				name = RCS
				part = bluedog_Apollo_CrewPod
				module = ModuleRCS
				action = toggle
			}
		}
		MAS_ACTION_GROUP
		{
			name = Tower Jettison AG
			id = 14
			ACTION
			{
				name = jettison1
				part = bluedog_Apollo_LES
				module = ModuleBdbLesController.DoJettison
				action = toggle
			}
			ACTION
			{
				name = jettison2
				part = bluedog_BigG_LES
				module = ModuleBdbLesController.DoJettison
				action = toggle
			}
		}
		MAS_ACTION_GROUP
		{
			name = SLA AG
			id = 15
			// Use the same switch for any SLA.
			ACTION
			{
				name = SLA 1
				part = bluedog_Saturn_S4B_SLA
				module = ModuleBdbDecouplerAnimation.Decouple
				action = on
			}
			ACTION
			{
				name = SLA 2
				part = bluedog_Saturn_S4B_SLA_JettisonBase
				module = ModuleBdbSLAHelper.Decouple
				action = on
			}
			ACTION
			{
				name = SLA 3
				part = bluedog_Saturn_S4B_SLAwide_JettisonBase
				module = ModuleBdbSLAHelper.Decouple
				action = on
			}
			ACTION
			{
				name = SLA MM1
				part = bluedog_Saturn_VFB_ESM
				module = ModuleDecouple
				action = on
			}
			ACTION
			{
				name = SLA MM2
				part = bluedog_Apollo_Block3_MissionModule
				module = ModuleDecouple
				action = on
			}
			ACTION
			{
				name = SLA MM3
				part = bluedog_Apollo_Block4_MissionModule
				module = ModuleDecouple
				action = on
			}
		}
		MAS_ACTION_GROUP
		{
			name = LEM release AG
			id = 16
			// Use the same switch for any SLA.
			ACTION
			{
				name = SLA 1
				part = bluedog_Saturn_S4B_SLA
				module = ModuleDecouple
				action = on
			}
			ACTION
			{
				name = SLA 2
				part = bluedog_Saturn_S4B_SLA_JettisonBase
				module = ModuleDecouple
				action = on
			}
			ACTION
			{
				name = SLA 3
				part = bluedog_Saturn_S4B_SLAwide_JettisonBase
				module = ModuleDecouple
				action = on
			}
		}
		MAS_ACTION_GROUP
		{
			name = Parachute Cover AG
			id = 17
			ACTION
			{
				name = Jettison Cover
				part = bluedog_Apollo_ParachuteCover
				module = ModuleDecouple
				action = on
			}
		}
		MAS_ACTION_GROUP
		{
			name = CM/SM Decouple AG
			id = 18
			ACTION
			{
				name = SM Separation
				part = bluedog_Apollo_Decoupler
				module = ModuleBdbDecouplerAnimation.Decouple
				action = on
			}
		}
		MAS_ACTION_GROUP
		{
			name = SM Cargo Bays AG
			id = 19
			ACTION
			{
				name = SM Cargo Bay1
				part = bluedog_Apollo_Block2_SM
				module = ModuleBdbJettison.Jettison
				action = toggle
			}
			ACTION
			{
				name = SM Cargo Bay2
				part = bluedog_Apollo_Block3_SM
				module = ModuleBdbJettison.Jettison
				action = toggle
			}
		}	
	}
}

@PART[bluedog_Apollo_CrewPod]:NEEDS[Bluedog_DB&B9PartSwitch]:FOR[zzz_Reviva]
{
	@INTERNAL {
		@name = bdbKP0110internal
	}

	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = IVASwitch
		switcherDescription = IVA
		switcherDescriptionPlural = IVAs
		switchInFlight = true
		uiGroupName = IVASwitch
		uiGroupDisplayName = IVA Switch

		SUBTYPE
		{
			name = BDB Placeholder
			primaryColor = Blue
			secondaryColor = White
			descriptionSummary = BDB Placeholder IVA
			descriptionDetail = Use placeholder BDB IVA.\n<color=green>Placeholder</color>
			
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleIVASwitch
				}
				DATA
				{
					internalName = Placeholder
				}
			}
		}
		
		SUBTYPE
		{
			name = BDB
			primaryColor = Blue
			secondaryColor = Blue
			descriptionSummary = BDB IVA
			descriptionDetail = Use normal BDB Stock IVA.\n<color=green>Low Tech</color>
			
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleIVASwitch
				}
				DATA
				{
					internalName = bdbKP0110internal
				}
			}
		}

		SUBTYPE:NEEDS[RasterPropMonitor]
		{
			name = BDB RPM
			primaryColor = Blue
			secondaryColor = Red
			descriptionSummary = BDB RPM IVA
			descriptionDetail = Use RPM based BDB IVA.\n<color=green>Low Tech</color>
			
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleIVASwitch
				}
				DATA
				{
					internalName = bdbKP0110internalRPM
				}
			}
		}

		SUBTYPE:NEEDS[AvionicsSystems]
		{
			name = MASRetro
			primaryColor = Green
			secondaryColor = Blue
			descriptionSummary = Retro IVA
			descriptionDetail = Use MOARdVPlus AvionicsSystems Retro IVA.\n<color=green>Low Tech Analog</color>
			
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleIVASwitch
				}
				DATA
				{
					internalName = FASA_Apollo_CM_Int
					// Copy node MM syntax
					#@REVIVA_VARS_APOLLO/MASFlightComputer {}
				}
			}
		}

		SUBTYPE:NEEDS[AvionicsSystems]
		{
			name = MASGlass
			primaryColor = Red
			secondaryColor = Blue
			descriptionSummary = Modern IVA
			descriptionDetail = Use MOARdVPlus AvionicsSystems Modern Glass IVA.\n<color=green>High Tech</color>
			
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleIVASwitch
				}
				DATA
				{
					internalName = FASA_Apollo_CM_Glass
					// Copy node MM syntax
					#@REVIVA_VARS_APOLLO/MASFlightComputer {}
				}
			}
		}

		/* ================================================================================ */
		// Copied from mk1-3
		
		SUBTYPE
		{
			name = Stock Mk1-3
			primaryColor = White
			secondaryColor = White
			descriptionSummary = Stock IVA (Mk1-3)
			descriptionDetail = Use the Stock IVA.\nFrom Mk1-3 Pod, may or may not work or look right.\n<color=green>Low Tech</color>
			
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleIVASwitch
				}
				DATA
				{
					internalName = Mk1-3
				}
			}
		}

		SUBTYPE:NEEDS[RasterPropMonitor]
		{
			name = RPM Mk1-3
			primaryColor = Blue
			secondaryColor = White
			descriptionSummary = RPM IVA (Mk1-3)
			descriptionDetail = Use RPM provided IVA, using JSI props.\nFrom Mk1-3 Pod, may or may not work or look right.\n<color=green>Medium Tech Digital</color>
			
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleIVASwitch
				}
				DATA
				{
					internalName = PodCockpitRPM
				}
			}
		}

		SUBTYPE:NEEDS[DE_IVAExtension]
		{
			name = DE Mk1-3
			primaryColor = Red
			secondaryColor = White
			descriptionSummary = DE IVA (Mk1-3)
			descriptionDetail = Use DE IVAExtension IVA.\nFrom Mk1-3 Pod, may or may not work or look right.\n<color=green>High Tech Digital</color>
			
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleIVASwitch
				}
				DATA
				{
					internalName = DE_Mk1-3
					RasterPropMonitorComputer
					{
						storedStrings = v 0.9.7.0|27.10.2017|    A.L.C.O.R.    |ADVANCED LANDING CAPSULE|FOR    ORBITAL    RENDEZVOUS|ALC00236-A2|ALCOR|           A.S.E.T.
						// = (0)<version> |(1) <date> |(2) <name for MFD STBY screen & Flight Books. 18 char max>| (3,4)<full name (2 lines)> |(5) < version of flight books, manuals...>|(6) <short name> |(7) Company
						triggeredEvents = ALCOR_CALLRECOVERYTEAM|ASET_AUTO_GEAR_DOWN_EVENT
					}
				}
			}
		}
		
		SUBTYPE:NEEDS[ASET/MK1-2_IVA_Replacement_by_ASET]
		{
			name = ASET Mk1-3
			primaryColor = Cyan
			secondaryColor = White
			descriptionSummary = ASET IVA (Mk1-3)
			descriptionDetail = Use Mk1-2 IVA Replacement by ASET.\nFrom Mk1-3 Pod, may or may not work or look right.\n<color=green>High Tech Analog</color>

			MODULE
			{
				IDENTIFIER
				{
					name = ModuleIVASwitch
				}
				DATA
				{
					internalName = MK1-2_ASETInternals
					RasterPropMonitorComputer
					{
						storedStrings = v 0.3.0.0|27.10.2017|   Mark 1-3 Pod    |MULTI-PURPOSE|CREW VEHICLE|SQD002002-A1|MK1-3|      SQUAD  &   A.S.E.T.
						triggeredEvents = ALCOR_CALLRECOVERYTEAM|ASET_AUTO_GEAR_DOWN_EVENT

						RPM_COLOROVERRIDE
						{

						// MFD -------------------------------------------------------------------------------------------------------------------------------------------------------

						// button backlight color

							COLORDEFINITION
							{
								name = ASET_MFD_BACKLIGHT_ACTIVECOLOR // passive color of tumble and rotary/dial switcher name label
								color = 53,60,69,255
							}

						// switchers

							COLORDEFINITION
							{
								name = ASET_SWITCHER_NAME_POSITIVECOLOR
								color= 140,160,180,255
							}
							COLORDEFINITION
							{
								name = ASET_SWITCHER_STATE_POSITIVECOLOR
								color= 120,140,255,255
							}
							COLORDEFINITION
							{
								name = ASET_SWITCHER_BORDER_POSITIVECOLOR
								color= 100,120,155,255
							}
							COLORDEFINITION
							{
								name = ASET_SWITCHER_MARK_POSITIVECOLOR
								color= 100,120,185,255
							}


						// digital indicator --------------------------------

						// readout

							COLORDEFINITION
							{
								name = ASET_DIGITALINDICATOR_NORMAL_COLOR
								color= 180,210,255,255
							}
							COLORDEFINITION
							{
								name = ASET_DIGITALINDICATOR_WARNING_COLOR
								color= 255,140,20,255
							}
							COLORDEFINITION
							{
								name = ASET_DIGITALINDICATOR_STBY_COLOR
								color= 100,120,155,255
							}

						// legend

							COLORDEFINITION
							{
								name = ASET_DIGITALINDICATOR_LEGEND_NORMAL_COLOR
								color= 100,120,185,255
							}
							COLORDEFINITION
							{
								name = ASET_DIGITALINDICATOR_LEGEND_STBY_COLOR
								color= 100,120,185,120
							}

						// Numeric Input display ------------------------------

						// background

							COLORDEFINITION
							{
								name = ASET_NUMINPUT_DISPLAY_DIFFUSE_ACTIVECOLOR
								color= 160,180,255,255
							}
							COLORDEFINITION
							{
								name = ASET_NUMINPUT_DISPLAY_DIFFUSE_PASSIVECOLOR
								color= 160,180,255,255
							}

							COLORDEFINITION
							{
								name = ASET_NUMINPUT_DISPLAY_EMISSIVE_ACTIVECOLOR
								color= 100,120,255,255
							}
							COLORDEFINITION
							{
								name = ASET_NUMINPUT_DISPLAY_EMISSIVE_PASSIVECOLOR
								color= 50,70,80,255
							}

						// readout

							COLORDEFINITION
							{
								name = ASET_NUMINPUT_DISPLAY_POSITIVECOLOR
								color= 0,0,0,255
							}
							COLORDEFINITION
							{
								name = ASET_NUMINPUT_DISPLAY_ZEROCOLOR
								color= 0,0,0,255
							}
							COLORDEFINITION
							{
								name = ASET_NUMINPUT_DISPLAY_NEGATIVECOLOR 
								color= 0,0,0,255
							}
							COLORDEFINITION
							{
								name = ASET_NUMINPUT_DISPLAY_GHOSTCOLOR
								color= 255,255,255,20
							}

						// IndicatorADV ---------------------------------------------------------------------------------------------

						// resources -------------------------------------

						// scale colors

							COLORDEFINITION
							{
								name = ASET_IND_ADV_RESRC_SCALE_ACTIVECOLOR // low
								color = 240,60,0,255
							}
							COLORDEFINITION
							{
								name = ASET_IND_ADV_RESRC_SCALE_PASSIVECOLOR  // normal
								color = 30,165,0,255
							}

						// scale consumption

							COLORDEFINITION
							{
								name = ASET_IND_ADV_RESRC_CONS_SCALE_ACTIVECOLOR // consumption
								color = 240,190,0,255
							}
							COLORDEFINITION
							{
								name = ASET_IND_ADV_RESRC_CONS_SCALE_PASSIVECOLOR  // production
								color = 115,245,0,255
							}	

						// readout text

							COLORDEFINITION
							{
								name = ASET_IND_ADV_RESRC_READOUT_POSITIVECOLOR // color of indicator readout [LOW]
								color = 255,160,110,255
							}

							COLORDEFINITION
							{
								name = ASET_IND_ADV_RESRC_READOUT_ZEROCOLOR // color of indicator readout [NORMAL]
								color = 210,255,170,255
							}

						// consumption readout text

							COLORDEFINITION
							{
								name = ASET_IND_ADV_RESRC_CONS_READOUT_POSITIVECOLOR // color of indicator readout [consumption]
								color = 240,190,0,255
							}

							COLORDEFINITION
							{
								name = ASET_IND_ADV_RESRC_CONS_READOUT_ZEROCOLOR // color of indicator readout [idle]
								color = 50,50,60,255
							}
							COLORDEFINITION
							{
								name = ASET_IND_ADV_RESRC_CONS_READOUT_NEGATIVECOLOR // color of indicator readout [production]
								color = 115,245,0,255
							}	

						// readout text window border

							COLORDEFINITION
							{
								name = ASET_IND_ADV_RESRC_READOUT_BORD_ACTIVECOLOR 
								color = 240,60,0,255
							}
							COLORDEFINITION
							{
								name = ASET_IND_ADV_RESRC_READOUT_BORD_PASSIVECOLOR 
								color = 30,165,0,255
							}				

						// temperature -------------------------------------

						// scale colors

							COLORDEFINITION
							{
								name = ASET_IND_ADV_TEMP_SCALE_ACTIVECOLOR // high
								color = 255,60,0,255
							}
							COLORDEFINITION
							{
								name = ASET_IND_ADV_TEMP_SCALE_PASSIVECOLOR  // normal
								color = 225,255,175,255
							}

						// readout text

							COLORDEFINITION
							{
								name = ASET_IND_ADV_TEMP_READOUT_POSITIVECOLOR // color of indicator readout [above zero]
								color = 230,230,230,255
							}

							COLORDEFINITION
							{
								name = ASET_IND_ADV_TEMP_READOUT_ZEROCOLOR // color of indicator readout [zero]
								color = 230,230,230,255
							}

							COLORDEFINITION
							{
								name = ASET_IND_ADV_TEMP_READOUT_NEGATIVECOLOR // color of indicator readout [below zero]
								color = 175,194,255,255
							}			

						// readout text window border

							COLORDEFINITION
							{
								name = ASET_IND_ADV_TEMP_READOUT_BORD_ACTIVECOLOR 
								color = 255,60,0,255
							}
							COLORDEFINITION
							{
								name = ASET_IND_ADV_TEMP_READOUT_BORD_PASSIVECOLOR 
								color = 225,255,175,255
							}	

						// engine control -------------------------------------

						// scale colors

							COLORDEFINITION
							{
								name = ASET_IND_ADV_ENG_SCALE_ACTIVECOLOR // max
								color = 255,180,0,255
							}
							COLORDEFINITION
							{
								name = ASET_IND_ADV_ENG_SCALE_PASSIVECOLOR  // normal
								color = 225,205,140,255
							}

						// readout text

							COLORDEFINITION
							{
								name = ASET_IND_ADV_ENG_READOUT_POSITIVECOLOR // color of indicator readout [max]
								color = 255,240,210,255
							}

							COLORDEFINITION
							{
								name = ASET_IND_ADV_ENG_READOUT_ZEROCOLOR // color of indicator readout [normal]
								color = 50,50,50,255
							}

							COLORDEFINITION
							{
								name = ASET_IND_ADV_ENG_READOUT_NEGATIVECOLOR // color of indicator readout [don't used]
								color = 100,100,255,255
							}


						// readout text window border

							COLORDEFINITION
							{
								name = ASET_IND_ADV_ENG_READOUT_BORD_ACTIVECOLOR 
								color = 255,180,0,255
							}
							COLORDEFINITION
							{
								name = ASET_IND_ADV_ENG_READOUT_BORD_PASSIVECOLOR 
								color = 225,205,140,255
							}	

						// ALCOR fuel monitor ------------------------------------------------------------------------------------------------------

						// graph

							COLORDEFINITION
							{
								name = ASET_FM_GRAPH_ACTIVECOLOR //light on
								color = 180,210,225,255
							}

						// vert bar

							COLORDEFINITION
							{
								name = ASET_FM_VERTBAR_FUELST_ACTIVECOLOR //light on
								color = 255,255,255,255
							}
							COLORDEFINITION
							{
								name = ASET_FM_VERTBAR_FUELTOT_ACTIVECOLOR //light on
								color = 200,200,255,255
							}
							COLORDEFINITION
							{
								name = ASET_FM_VERTBAR_OXST_ACTIVECOLOR //light on
								color = 255,255,255,255
							}
							COLORDEFINITION
							{
								name = ASET_FM_VERTBAR_OXTOT_ACTIVECOLOR //light on
								color = 200,200,255,255
							}
							COLORDEFINITION
							{
								name = ASET_FM_VERTBAR_MP_ACTIVECOLOR //light on
								color = 255,255,200,255
							}	

						// label	

							COLORDEFINITION
							{
								name = ASET_FM_TEXT_ZEROCOLOR //  light off
								color = 100,120,185,255
							}

							COLORDEFINITION
							{
								name = ASET_FM_VALUE_ZEROCOLOR //  light off
								color = 200,200,255,255
							}

							COLORDEFINITION
							{
								name = ASET_FM_FLOW_ZEROCOLOR //  light off
								color = 255,200,100,255
							}									

						// label plate ---------------------------------------------

						// background

							COLORDEFINITION
							{
								name = ASET_PLATEBKG_DIFFUSE_PASSIVECOLOR
								color= 255,255,255,255
							}
							COLORDEFINITION
							{
								name = ASET_PLATEBKG_DIFFUSE_ACTIVECOLOR
								color= 255,255,255,255
							}

							COLORDEFINITION
							{
								name = ASET_PLATEBKG_EMISSIVE_PASSIVECOLOR
								color= 0,0,0,255
							}
							COLORDEFINITION
							{
								name = ASET_PLATEBKG_EMISSIVE_ACTIVECOLOR
								color= 140,160,200,255
							}

						// label text

							COLORDEFINITION
							{
								name = ASET_PLATETEXT_POSITIVECOLOR
								color= 0,0,0,255
							}
							COLORDEFINITION
							{
								name = ASET_PLATETEXT_ZEROCOLOR
								color= 0,0,0,255
							}

						// dividing lines

							COLORDEFINITION
							{
								name = ASET_PANELDIVIDER_PRIMARY_BACKLIGHTCOLOR
								color= 100,120,180,255
							}
						}
					}
				}
			}
		}

		SUBTYPE:NEEDS[AvionicsSystems]
		{
			name = MAS Mk1-3
			primaryColor = Avocado // Avacadonics
			secondaryColor = White
			descriptionSummary = MAS IVA (Mk1-3)
			descriptionDetail = MOARdV AvionicsSystems IVA.\nFrom Mk1-3 Pod, may or may not work or look right.\n<color=green>Low Tech Analog</color>
			
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleIVASwitch
				}
				DATA
				{
					internalName = MAS_Mk1-3
					MASFlightComputer
					{
						requiresPower = true
						gLimit = 4.7
						baseDisruptionChance = 0.20

						PERSISTENT_VARIABLES
						{
						}
						RPM_COLOROVERRIDE
						{
							COLORDEFINITION
							{
								// 'white' label unlit color
								name = ASET_SWITCHER_NAME_ZEROCOLOR
								color =  213, 213, 213, 255
							}
							COLORDEFINITION
							{
								name = ASET_SWITCHER_MARK_POSITIVECOLOR
								color = 255, 255, 155, 255
							}
							COLORDEFINITION
							{
								name = ASET_SWITCHER_BORDER_POSITIVECOLOR
								color = 255, 255, 155, 255
							}
							COLORDEFINITION
							{
								// Use warm-tone white to simulate incandescent lighting
								name = ASET_SWITCHER_NAME_POSITIVECOLOR
								color = 255, 255, 155, 255
							}
							COLORDEFINITION
							{
								// Use warm-tone white to simulate incandescent lighting
								name = ASET_AIRCRAFTGAUGESCALE_ACTIVECOLOR
								color = 255, 255, 155, 255
							}
							COLORDEFINITION
							{
								// Use warm-tone white to simulate incandescent lighting
								name = ASET_AIRCRAFTGAUGEHAND_ACTIVECOLOR
								color = 255, 255, 155, 255
							}
						}
					}
				}
			}
		}

		SUBTYPE:NEEDS[DE_IVAExtension&AvionicsSystems]
		{
			name = DE+MAS Mk1-3
			primaryColor = Red
			secondaryColor = Avocado // Avacadonics
			descriptionSummary = DE+MAS IVA 2 (Mk1-3)
			descriptionDetail = Use DE IVAExtension IVA with MAS MFD upgrades.\nFrom Mk1-3 Pod, may or may not work or look right.\n<color=green>Near Future Digital</color>
			
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleIVASwitch
				}
				
				DATA
				{
					internalName = DE_Mk1-3_MAS
					RasterPropMonitorComputer
					{
						storedStrings = v 0.9.7.0|27.10.2017|    A.L.C.O.R.    |ADVANCED LANDING CAPSULE|FOR    ORBITAL    RENDEZVOUS|ALC00236-A2|ALCOR|           A.S.E.T.
						// = (0)<version> |(1) <date> |(2) <name for MFD STBY screen & Flight Books. 18 char max>| (3,4)<full name (2 lines)> |(5) < version of flight books, manuals...>|(6) <short name> |(7) Company
						triggeredEvents = ALCOR_CALLRECOVERYTEAM|ASET_AUTO_GEAR_DOWN_EVENT

					}
				}
			}
		}

		SUBTYPE:NEEDS[Max-Ksp-IVA-Pack&AvionicsSystems]
		{
			name = Max-Ksp Mk1-3
			primaryColor = Red
			secondaryColor = Magenta
			descriptionSummary = Max-Ksp IVA (MK1-3)
			descriptionDetail = Max-Ksp IVA using MAS.\nFrom Mk1-3 Pod, may or may not work or look right.\n<color=green>Low Tech</color>

			MODULE
			{
				IDENTIFIER
				{
					name = ModuleIVASwitch
				}
				DATA
				{
					internalName = Max_Ksp_MAS_Mk1-3
					MASFlightComputer
					{
						requiresPower = true
						gLimit = 4.7
						baseDisruptionChance = 0.20

						PERSISTENT_VARIABLES
						{
						}
						RPM_COLOROVERRIDE
						{
							COLORDEFINITION
							{
								// 'white' label unlit color
								name = ASET_SWITCHER_NAME_ZEROCOLOR
								color =  213, 213, 213, 255
							}
							COLORDEFINITION
							{
								name = ASET_SWITCHER_MARK_POSITIVECOLOR
								color = 255, 255, 155, 255
							}
							COLORDEFINITION
							{
								name = ASET_SWITCHER_BORDER_POSITIVECOLOR
								color = 255, 255, 155, 255
							}
							COLORDEFINITION
							{
								// Use warm-tone white to simulate incandescent lighting
								name = ASET_SWITCHER_NAME_POSITIVECOLOR
								color = 255, 255, 155, 255
							}
							COLORDEFINITION
							{
								// Use warm-tone white to simulate incandescent lighting
								name = ASET_AIRCRAFTGAUGESCALE_ACTIVECOLOR
								color = 255, 255, 155, 255
							}
							COLORDEFINITION
							{
								// Use warm-tone white to simulate incandescent lighting
								name = ASET_AIRCRAFTGAUGEHAND_ACTIVECOLOR
								color = 255, 255, 155, 255
							}
						}
					}
				}
			}
		}

		SUBTYPE:NEEDS[SABS_IVA&AvionicsSystems]
		{
			name = SABS Mk1-3
			primaryColor = Blue
			secondaryColor = Green
			descriptionSummary = SABS IVA (MK1-3)
			descriptionDetail = Use SABS_IVA (SingABrightSong IVA)\nFrom Mk1-3 Pod, may or may not work or look right.\n<color=green>Mid Tech Analog</color>
			
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleIVASwitch
				}
				
				DATA
				{
					internalName = SABS_Mk1-3_IVA
					MASFlightComputer
					{
						requiresPower = true
						gLimit = 4.7
						baseDisruptionChance = 0.20

						PERSISTENT_VARIABLES
						{
							Backlight=1
						}
					}
				}
			}
		}

		/* ================================================================================ */
	}

	MODULE
	{
		name = ModuleIVASwitch
		internalName = bdbKP0110internal
	}
}
